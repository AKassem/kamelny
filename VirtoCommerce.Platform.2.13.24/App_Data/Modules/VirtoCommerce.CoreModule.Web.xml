<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VirtoCommerce.CoreModule.Web</name>
    </assembly>
    <members>
        <member name="T:VirtoCommerce.CoreModule.Web.BackgroundJobs.JobCancellationTokenWrapper">
            <summary>
            Implements cancellation abstraction for the job.
            </summary>
            <remarks>
            This is needed to support job deletion. See remarks on ICancellationToken.
            </remarks>
        </member>
        <member name="T:VirtoCommerce.CoreModule.Web.BackgroundJobs.HangfireIndexingWorker">
            <summary>
            Scales out indexation work through Hangfire.
            Throttles queueing so that indexation job doesn't go way faster than actual indexation work.
            </summary>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.SearchIndexationController.GetDocumentIndexAsync(System.String,System.String)">
            <summary>
            Get search index for specified document type and document id.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.SearchIndexationController.IndexDocuments(VirtoCommerce.Domain.Search.IndexingOptions[])">
            <summary>
            Rund indexation process for specified options
            </summary>
            <returns></returns>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.EvaluateTaxes(System.String,VirtoCommerce.Domain.Tax.Model.TaxEvaluationContext)">
            <summary>
            Evaluate and return all tax rates for specified store and evaluation context 
            </summary>
            <param name="storeId"></param>
            <param name="evalContext"></param>
            <returns></returns>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.GetFulfillmentCenters">
            <summary>
            Return all fulfillment centers registered in the system
            </summary>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.GetFulfillmentCenter(System.String)">
            <summary>
            Find fulfillment center by id
            </summary>
            <param name="id">fulfillment center id</param>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.UpdateFulfillmentCenter(VirtoCommerce.Domain.Commerce.Model.FulfillmentCenter)">
            <summary>
             Update a existing fulfillment center 
            </summary>
            <param name="center">fulfillment center</param>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.DeleteFulfillmentCenters(System.String[])">
            <summary>
            Delete  fulfillment centers registered in the system
            </summary>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.BatchUpdateSeoInfos(VirtoCommerce.Domain.Commerce.Model.SeoInfo[])">
            <summary>
            Batch create or update seo infos
            </summary>
            <param name="seoInfos"></param>
            <returns></returns>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.GetSeoInfoBySlug(System.String)">
            <summary>
            Find all SEO records for object by slug 
            </summary>
            <param name="slug">slug</param>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.GetAllCurrencies">
            <summary>
            Return all currencies registered in the system
            </summary>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.UpdateCurrency(VirtoCommerce.Domain.Commerce.Model.Currency)">
            <summary>
             Update a existing currency 
            </summary>
            <param name="currency">currency</param>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.CreateCurrency(VirtoCommerce.Domain.Commerce.Model.Currency)">
            <summary>
             Create new currency 
            </summary>
            <param name="currency">currency</param>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.DeleteCurrencies(System.String[])">
            <summary>
             Delete currencies 
            </summary>
            <param name="codes">currency codes</param>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.GetAllPackageTypes">
            <summary>
            Return all package types registered in the system
            </summary>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.UpdatePackageType(VirtoCommerce.Domain.Commerce.Model.PackageType)">
            <summary>
             Update a existing package type 
            </summary>
            <param name="packageType">package type</param>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.CreatePackageType(VirtoCommerce.Domain.Commerce.Model.PackageType)">
            <summary>
             Create new package type 
            </summary>
            <param name="packageType">package type</param>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.DeletePackageTypes(System.String[])">
            <summary>
             Delete package types 
            </summary>
            <param name="ids">package type ids</param>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.StorefrontSecurityController.GetUserById(System.String)">
            <summary>
            Get user details by user ID
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.StorefrontSecurityController.GetUserByName(System.String)">
            <summary>
            Get user details by user name
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.StorefrontSecurityController.GetUserByEmail(System.String)">
            <summary>
            Get user details by user email
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.StorefrontSecurityController.GetUserByLogin(System.String,System.String)">
            <summary>
            Get user details by external login provider
            </summary>
            <param name="loginProvider"></param>
            <param name="providerKey"></param>
            <returns></returns>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.StorefrontSecurityController.PasswordSignIn(System.String,System.String)">
            <summary>
            Sign in with user name and password
            </summary>
            <param name="userName"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.StorefrontSecurityController.Create(VirtoCommerce.Platform.Core.Security.ApplicationUserExtended)">
            <summary>
            Create a new user
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.StorefrontSecurityController.GenerateResetPasswordToken(System.String,System.String,System.String,System.String)">
            <summary>
            Generate a password reset token
            </summary>
            <remarks>
            Generates a password reset token and sends a password reset link to the user via email.
            </remarks>
            <param name="userId"></param>
            <param name="storeName"></param>
            <param name="language"></param>
            <param name="callbackUrl"></param>
            <returns></returns>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.StorefrontSecurityController.ResetPassword(System.String,System.String,System.String)">
            <summary>
            Reset a password for the user
            </summary>
            <param name="userId"></param>
            <param name="token"></param>
            <param name="newPassword"></param>
            <returns></returns>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.StorefrontSecurityController.RemindUserNameNotification(System.String,System.String,System.String)">
            <summary>
            Remind  user name for sign in and send this notification
            </summary>
            <param name="userId"></param>
            <param name="storeName"></param>
            <param name="language"></param>
            <returns></returns>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.StorefrontSecurityController.SendRegistrationInvitation(System.String,System.String,System.String,System.String)">
            <summary>
            Generate invite token for registering by invite and send this notification
            </summary>
            <param name="userId"></param>
            <param name="storeName"></param>
            <param name="language"></param>
            <param name="callbackUrl"></param>
            <returns></returns>
        </member>
        <member name="P:VirtoCommerce.CoreModule.Web.Model.PushNotifcations.IndexProgressPushNotification.Finished">
            <summary>
            Gets or sets the job finish date and time.
            </summary>
            <value>
            The finished.
            </value>
        </member>
        <member name="P:VirtoCommerce.CoreModule.Web.Model.PushNotifcations.IndexProgressPushNotification.TotalCount">
            <summary>
            Gets or sets the total count of objects to process.
            </summary>
            <value>
            The total count.
            </value>
        </member>
        <member name="P:VirtoCommerce.CoreModule.Web.Model.PushNotifcations.IndexProgressPushNotification.ProcessedCount">
            <summary>
            Gets or sets the count of processed objects.
            </summary>
            <value>
            The processed count.
            </value>
        </member>
        <member name="P:VirtoCommerce.CoreModule.Web.Model.PushNotifcations.IndexProgressPushNotification.ErrorCount">
            <summary>
            Gets or sets the count of errors during processing.
            </summary>
            <value>
            The error count.
            </value>
        </member>
        <member name="P:VirtoCommerce.CoreModule.Web.Model.PushNotifcations.IndexProgressPushNotification.Errors">
            <summary>
            Gets or sets the errors that has occurred during processing.
            </summary>
            <value>
            The errors.
            </value>
        </member>
        <member name="P:VirtoCommerce.CoreModule.Web.Model.StorefrontUser.AllowedStores">
            <summary>
            List of stores which  user can sing in
            </summary>
        </member>
        <member name="T:VirtoCommerce.CoreModule.Web.Resources.NotificationResource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:VirtoCommerce.CoreModule.Web.Resources.NotificationResource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:VirtoCommerce.CoreModule.Web.Resources.NotificationResource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:VirtoCommerce.CoreModule.Web.Resources.NotificationResource.EmailConfirmationNotificationBody">
            <summary>
              Looks up a localized string similar to To complete your create account process please click this link: &lt;a href=&quot;{{ url }}&quot;&gt;{{ url }}&lt;/a&gt;.
            </summary>
        </member>
        <member name="P:VirtoCommerce.CoreModule.Web.Resources.NotificationResource.EmailConfirmationNotificationSubject">
            <summary>
              Looks up a localized string similar to Email confirmation.
            </summary>
        </member>
        <member name="P:VirtoCommerce.CoreModule.Web.Resources.NotificationResource.RegistrationInvitationNotificationBody">
            <summary>
              Looks up a localized string similar to Please  to register by invite clicking &lt;a href=&quot;{{ invite_url }}&quot;&gt;here&lt;/a&gt;.
            </summary>
        </member>
        <member name="P:VirtoCommerce.CoreModule.Web.Resources.NotificationResource.RegistrationInvitationNotificationSubject">
            <summary>
              Looks up a localized string similar to Registration by invite.
            </summary>
        </member>
        <member name="P:VirtoCommerce.CoreModule.Web.Resources.NotificationResource.RemindUserNameNotificationBody">
            <summary>
              Looks up a localized string similar to Your user name - {{ user_name }}..
            </summary>
        </member>
        <member name="P:VirtoCommerce.CoreModule.Web.Resources.NotificationResource.RemindUserNameNotificationSubject">
            <summary>
              Looks up a localized string similar to Remind user name.
            </summary>
        </member>
    </members>
</doc>
